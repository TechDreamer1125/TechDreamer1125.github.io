<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>月牙旁，你轻颦浅笑</title>
    <description>O ever youthful, O ever weeping.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 20 Feb 2018 22:50:52 +0800</pubDate>
    <lastBuildDate>Tue, 20 Feb 2018 22:50:52 +0800</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>路径依赖</title>
        <description>&lt;h4 id=&quot;路径依赖&quot;&gt;路径依赖&lt;/h4&gt;
&lt;p&gt;上次全哥培训的时候提到了「路径依赖」一词，单从字面意思理解就是像惯性一样对某一条路产生了依赖，走不出去。&lt;/p&gt;

&lt;p&gt;最近看到一个关于熊猫的故事，让我对这个词有了更深刻的理解。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;当年熊迁徙到秦岭，那里是南北分界线，气候特征既像北方又像南方，同时生长着只有低纬度长的植物竹子。熊来的这里看到一片竹海就发生了生活习性的变化。因为竹子取之不尽它们就只吃竹子；冬天也有东西吃它们就不冬眠了。
下面有几个关于熊猫和竹子的特点&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;熊猫每天吃16小时的竹子；&lt;/li&gt;
    &lt;li&gt;一片竹林是有一个母竹长出来的，其寿命全部与母竹林保持一致&lt;/li&gt;
    &lt;li&gt;竹子一生只开一次花，结一次果。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;从上面的故事中，熊猫就面临了几种困境。食物单一，当竹子集体死亡时就会因为没有食物而饿死；繁殖能力低，因为每天把体能都耗费在吃竹子上导致性欲低下。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;熊猫就是因为被它所拥有的资源绑架了，产生了一种「路径依赖」。当路径不见了或者发生了塌陷时，它们就陷入了危机之中，甚至可能毁灭。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;公司，人，都可能陷入「路径依赖」。一种资源看上去是福音，但是可能会暗中绑架你，最后让你陷入困境；这就需要我们时刻保持警觉性，不仅要去发现，更要有勇气去改变。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sun, 18 Feb 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/02/Path-Dependence/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/02/Path-Dependence/</guid>
        
        <category>成长</category>
        
        
      </item>
    
      <item>
        <title>像电脑一样思考</title>
        <description>&lt;h3 id=&quot;像电脑一样思考&quot;&gt;像电脑一样思考&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;如果每个人的「硬件配置」都差不多，那么「软件」和「操作方式」就是最大化电脑效率的方式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先明白自己「计算能力」有限：当计算机超负荷运行的时候，CPU超频，发热严重，甚至出现卡顿。如果我们自己超负荷，多任务的工作也会这样，也许身体不能支撑，也许效率不高工作质量差。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;迭代能力：计算机不断的更新软件，更新语言，更新操作方式就是为了在不改变配置的基础上做更多的事。而我们则也一样，需要不断的学习积累知识，运用知识来改善自己的「软件性能」。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;兼容性：流行的编程语言兼容多个平台；操作系统通过虚拟机兼容不同格式的软件。而我们则要学会用合适的方式去「兼容」不同的人、不同的观点。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;通过电脑的方式思考让自己变得更理智&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 10 Feb 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/02/Think-Like-A-Computer/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/02/Think-Like-A-Computer/</guid>
        
        <category>成长</category>
        
        
      </item>
    
      <item>
        <title>手段与目的</title>
        <description>&lt;h4 id=&quot;手段与目的&quot;&gt;手段与目的&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;什么是手段？什么是目的？如果本末倒置会怎样？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;看到过很多偏执的人，无论是周围的人，还是网络上，甚至是我自己，都会对某种方式很执着，就像坚信某某某是世界上最好的语言，某某某是最好最优雅的方式。但是转念一想我们这种执着到底是针对目的还是手段，如果是针对手段的执着，那么我们这种执着是否是错的？因为明明目的才是最重要的，为何要对手段这么的偏执？难道是说我们把手段误解成了目的，所以我们才对手段的完美如此执着？&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;当目的是明确的时，手段只是为了达到目的的做法，当规则固定的情况下，可以使用不同的手段达成目的。如果本末倒置呢？那么就会发生不断的去追求最完美的却不一定是效率最高的手段，但是目的达成的效果都一样，这样无疑是一种浪费。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;很多时候我们分不清目的和手段，经常把手段当成了目的。如果幸福的生活是目的，那么努力的工作只是一种手段；如果求知是一种目的，那么阅读只是一种手段；如果给客户更好的使用体验是一种目的，那么技术只是一种手段。能够准确的明白手段与目的，就像是能够分清楚主次一样。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;也许我不在乎你的手段，只在乎你的目的。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Wed, 17 Jan 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/01/Method-And-Purpose/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/01/Method-And-Purpose/</guid>
        
        <category>成长</category>
        
        
      </item>
    
      <item>
        <title>驱动表和被驱动表</title>
        <description>&lt;p&gt;当两表发生关联的时候就会有驱动表和被驱动表之分，驱动表也叫外表（R表），被驱动表也叫做内表（S表）。一般我们将小表当做驱动表（指定了联接条件时，满足查询条件的记录行数少的表为「驱动表」,未指定联接条件时，行数少的表为「驱动表」；MySQL 内部优化器也是这么做的）。以下有两点需要注意：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;两表关联&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;当两表通过索引建立关联时，驱动表不需要建立索引，被驱动表有索引即可，这样就能利用上索引了；不过为了避免发生弄错的情况，两个表都建立索引也可以。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;排序&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;对驱动表可以直接排序，对非驱动表（的字段排序）需要对循环查询的合并结果（临时表）进行排序，所以 EXPLAIN 中会出现 using temporary 的情况，效率降低。所以我们尽量保证排序用的是驱动表字段。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 25 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/11/R-S-Table/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/R-S-Table/</guid>
        
        <category>MySQL</category>
        
        
      </item>
    
      <item>
        <title>安装 MySQL 5.7（源码安装）</title>
        <description>&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;服务器：Ubuntu 16.04 64位&lt;/li&gt;
    &lt;li&gt;安装方式：二进制安装&lt;/li&gt;
    &lt;li&gt;安装版本：5.7.20&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先进入到相应目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd /usr/local&lt;/code&gt; 下载二进制文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;wget https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz&lt;/code&gt;，&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;解压文件并建立软连接 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ln -s mysql-5.7.20 mysql&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/MySQL5.7-install/image01.png&quot; height=&quot;70%&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;建立用户组 &lt;code class=&quot;highlighter-rouge&quot;&gt;groupadd mysql&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;增加用户 &lt;code class=&quot;highlighter-rouge&quot;&gt;useradd -r -g mysql -s /bin/false mysql&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5.7 版本的通用二进制安装包经解压后得到的 MySQL 目录，内部并未包含数据文件存放的目录，所以需要单独再创建一个子目录用于存放数据文件，比如取名为 data &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir data&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;初始化 &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/MySQL5.7-install/image02.png&quot; height=&quot;70%&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MySQL有对依赖libaio 库。如果此库未在本地安装Data目录的初始化和后续服务器启动的步骤将失败。
apt-get install libaio1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;再次初始化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/MySQL5.7-install/image03.png&quot; height=&quot;70%&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/mysql_ssl_rsa_setup --datadir=/usr/local/mysql/data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/MySQL5.7-install/image04.png&quot; height=&quot;70%&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;编辑配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;vim /etc/my.cnf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mysqld]
port = 3306
user = mysql
basedir = /usr/local/mysql
datadir = /usr/local/mysql/data
log-error = /var/log/mysql-error.log
log_timestamps=SYSTEM
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;启动 MySQL &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/mysqld_safe –user=mysql &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/MySQL5.7-install/image05.png&quot; height=&quot;70%&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;要求修改密码 &lt;code class=&quot;highlighter-rouge&quot;&gt;set password=password('这里是你的密码');&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在 Linux 下为了安全，默认是不允许 MySQL 服务器本机以外的机器访问 MySQL 数据库服务的，因此需要重新授权 root 账号。方便其他机器远程访问 MySQL 服务器，MySQL 命令如下：&lt;code class=&quot;highlighter-rouge&quot;&gt;grant all privileges on *.* to root@'%' identified by '你的密码';&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改权限后使用命令立即生效 &lt;code class=&quot;highlighter-rouge&quot;&gt;flush privileges;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld&lt;/code&gt; 之后就可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;service mysqld start&lt;/code&gt; 启动服务了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;更改环境变量，到根目录 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~&lt;/code&gt; 修改.bashrc
 &lt;code class=&quot;highlighter-rouge&quot;&gt;vim .bashrc&lt;/code&gt; 添加&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=$PATH:/usr/local/mysql/bin
source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 11 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/11/MySQL5.7-install/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/MySQL5.7-install/</guid>
        
        <category>MySQL</category>
        
        
      </item>
    
      <item>
        <title>Ubuntu 上构建 Ghost 环境</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Ghost是基于Node.js的博客系统，所以首先需要安装Node环境。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-安装node&quot;&gt;1 安装node&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install -y python-software-properties python g++ make  
sudo add-apt-repository ppa:chris-lea/node.js  
sudo apt-get install nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;删除node用apt-get remove nodejs 即可&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;检查是否安装成功：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node -v
v4.2.6
npm -v
3.5.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;两个命令都显示出版本号即为安装成功。&lt;/p&gt;

&lt;h3 id=&quot;2-安装nginx&quot;&gt;2 安装Nginx&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nginx 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接下来需要配置Nginx，首先进入/etc/nginx目录，删除/etc/nginx/sites-enabled目录下的默认配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /etc/nginx/
sudo rm sites-enabled/default
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后在/etc/nginx/sites-available/目录下创建ghost文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo touch /etc/nginx/sites-available/ghost
sudo vim /etc/nginx/sites-available/ghost
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将下面的配置粘贴&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen 80;
    server_name 你的域名;
    location / {
        proxy_set_header   X-Real-IP $remote_addr;
        client_max_body_size 50m;
        proxy_set_header   Host      $http_host;
        proxy_pass         http://127.0.0.1:2368;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;创建一个软连接&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ln -s /etc/nginx/sites-available/ghost /etc/nginx/sites-enabled/ghost
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后重启Nginx&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;为了安全起见，创建一个用户，获取唯一访问/var/www/ghost的特权&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo adduser --shell /bin/bash --gecos 'Ghost application' ghost
sudo chown -R ghost:ghost /var/www/ghost/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在使用ghost用户&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su - ghost
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;3-安装ghost&quot;&gt;3 安装Ghost&lt;/h3&gt;
&lt;p&gt;创建一个文件夹放Ghost&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir -p /var/www
cd /var/www
sudo wget https://ghost.org/zip/ghost-latest.zip
sudo unzip -d /var/www/ghost ghost-latest.zip
sudo npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果不能解压，是因为没有解压工具，安装解压工具即可：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install unzip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修改配置文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ghost
sudo cp config.example.js config.js  
sudo vim config.js 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果提示vim不存在，则安装vim，或者直接用vi&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将下面的东西添加到配置文件,只需配置production和server即可。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
config = {
    // ### Production
    // When running Ghost in the wild, use the production environment
    // Configure your URL and mail settings here
    production: {
        url: 'http://my-ghost-blog.com',
###将url改成想关联的域名，注意带上http
        mail: {
            // Your mail settings
        },
        database: {
            client: 'sqlite3',
            connection: {
                filename: path.join(__dirname, '/content/data/ghost.db')
            },
            debug: false
        },

        server: {
            // Host to be passed to node's `net.Server#listen()`
            host: '127.0.0.1',
###将‘127.0.0.1’改为‘0.0.0.0’
###此处改为0.0.0.0是为了跟域名绑定的时候做准备
            // Port to be passed to node's `net.Server#listen()`, for iisnode s$
            port: '2368'
        }
    },
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在Ghost目录（/var/www/ghost）安装Ghost以来的npm包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo npm install --production
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果内存是512M，安装时可能出现内存不足安装不成功的现象，通过Liunx上增加swap空间的方式来解决这个问题。安装完成后目录下就会出现node_modules文件夹&lt;/p&gt;

&lt;h3 id=&quot;31-启动ghost&quot;&gt;3.1 启动Ghost&lt;/h3&gt;
&lt;p&gt;首先重启Nginx&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后开启Ghost&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /var/www/ghost
npm start --production
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接下来我们需要让ghost一直运行，首先安装forever&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo npm install -g forever
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NODE_ENV=production forever start index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;检查是否正常挂载&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;forever list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data:        uid  command         script   forever pid   id logfile                 uptime
data:    [0] gBb2 /usr/bin/nodejs index.js 21343   21373    /root/.forever/gBb2.log 0:0:0:3.620
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个则表示正常挂载，结束命令为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;forever index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 30 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/10/Ubuntu-Create-Ghost/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/Ubuntu-Create-Ghost/</guid>
        
        <category>Linux</category>
        
        
      </item>
    
      <item>
        <title>在ubuntu上安装配置 shadowsocks</title>
        <description>&lt;h3 id=&quot;在ubuntu上安装配置-shadowsocks&quot;&gt;在ubuntu上安装配置 shadowsocks&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;首先下载 python-pip 和 shadowsocks&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install python-pip
pip install shadowsocks
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;编辑 /etc/shadowsocks.json 的配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//服务器的ip地址&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;port_password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//设置不同的端口和密码&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;520&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;9184&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;local_address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;local_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;timeout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;fast_open&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;然后保持后台运行&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ssserver -c /etc/shadowsocks.json -d start

sudo ssserver -c /etc/shadowsocks.json -d stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;中途可能遇到的问题&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;保持后台运行 shaodowsocks 的命令失败，因为 shadowsocks 的版本小于2.6，2.6版本以后才有 -d 的命令&lt;/li&gt;
  &lt;li&gt;如果运行 shadowsocks 后，访问外网还是访问不上，那么通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ssserver -c /etc/shadowsocks.json start&lt;/code&gt;（该不是后台运行，通过这种方式运行后服务器不能进行其它操作，但是可以收集到访问网站的信息），再访问外网，然后查看收集到的信息，通过错误信息再分析问题。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 10 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/10/Install-Shadowsocks-On-Ubuntu/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/Install-Shadowsocks-On-Ubuntu/</guid>
        
        <category>安装教程</category>
        
        
      </item>
    
      <item>
        <title>拥有两种相反的意见，却不紊乱自己的行为能力</title>
        <description>&lt;h4 id=&quot;拥有两种相反的意见却不紊乱自己的行为能力&quot;&gt;拥有两种相反的意见，却不紊乱自己的行为能力&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;什么时候眼前苟且，什么时候诗和远方？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;看书获取，聊天聆听，沟通交流；这些总是会出现观点交互的场景，经常会让我产生怀疑与思考。在不断的学习，进步，理解的过程中；在面对跟以前坚信的事情相悖的情况下；在遇到超出可接受范围的事物时；在这些所有可能质疑自己的场景中，该怎么保持同时接收不同观点的意见，并且保持不紊乱自己行为的能力？&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在公司中：需求复杂与流程简易的矛盾；新的流程与兼容系统的矛盾；工作时长与工作效率的矛盾。每次的矛盾点都会让自己的内心进行一番斗争，因为可能没有对与错，有的只是在当时那个情况下的适合与否。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在生活中：两种完全对立的物理理念都能蓬勃发展；两种对立的经济思维却都有自己的学术学派。而被量子力学折腾的玻尔说的“真理分大小两种，和小真理对立的必然是谬误，而和大真理对立的必然也是大真理。”，也许就是答案，谁知道呢。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;脑海中存放两种截然不的信息，想让两者相互依存，想让这两种信息不扰乱自己的思维，而不是偏要让两种思维挣个你死我活的话；我想胡适先生的&lt;code class=&quot;highlighter-rouge&quot;&gt;怕什么真理无穷，进一寸有一寸欢喜&lt;/code&gt;的后半句，让我感受到，只要享受在&lt;code class=&quot;highlighter-rouge&quot;&gt;接受&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;思考&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;判断&lt;/code&gt;知识过程中，获得过程中的欢喜，也许这样就够了，最起码我现在是这样认为的。&lt;/p&gt;

</description>
        <pubDate>Mon, 25 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/09/Two-Opposing-View/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/09/Two-Opposing-View/</guid>
        
        <category>成长</category>
        
        
      </item>
    
      <item>
        <title>常用软件安装（均在 Ubuntu 上安装)</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#RzAndSz&quot;&gt;rz与sz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#crontab&quot;&gt;crontab&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#awk&quot;&gt;awk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rz与sz&quot;&gt;rz与sz&lt;/h3&gt;
&lt;p&gt;&lt;a id=&quot;RzAndSz&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rz 和 sz 是将本地的文件上传到服务器或者从服务器上下载文件到本地的命令。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ubuntu上命令安装&quot;&gt;Ubuntu上命令安装&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;下载并安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /tmp
wget http://www.ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz
tar zxvf lrzsz-0.12.20.tar.gz &amp;amp;&amp;amp; cd lrzsz-0.12.20
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;软件默认安装到了 /usr/local/bin/ 路径，需要创建软连接&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/bin
ln -s /usr/local/bin/lrz rz
ln -s /usr/local/bin/lsz sz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;crontab&quot;&gt;crontab&lt;/h3&gt;
&lt;p&gt;&lt;a id=&quot;crontab&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;crontab 是一个作业自动化的工具&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;下载并启用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install cron
service cron start  // 启动 crontab 服务
service cron status // 查看 crontab 的状态
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;awk&quot;&gt;awk&lt;/h3&gt;
&lt;p&gt;&lt;a id=&quot;awk&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;awk 是一个强大的文本分析工具，相对于 grep 的查找，sed 的编辑，awk 在其对数据分析并生成报告时，显得尤为强大。简单来说 awk 就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;普通安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install gawk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;源码安装&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://ftp.gnu.org/gnu/gawk/gawk-4.1.1.tar.xz
tar xvf gawk-4.1.1.tar.xz
./configure
make
make check  -- 可选
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;检查是否安装成功&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which awk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果安装成功，就会显示 awk 的安装目录&lt;/p&gt;

</description>
        <pubDate>Mon, 17 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/Common-Software-Install/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/Common-Software-Install/</guid>
        
        <category>安装教程</category>
        
        
      </item>
    
      <item>
        <title>常用术语</title>
        <description>&lt;ul&gt;
  &lt;li&gt;PV = page view&lt;/li&gt;
  &lt;li&gt;TPS = transactions per second&lt;/li&gt;
  &lt;li&gt;QPS = queries per second&lt;/li&gt;
  &lt;li&gt;RPS = requests per second&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RDS 关系型数据库服务(Relational Database Service)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;进程&lt;code class=&quot;highlighter-rouge&quot;&gt;process&lt;/code&gt;：进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分配和调度的一个独立单位。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;线程&lt;code class=&quot;highlighter-rouge&quot;&gt;thread&lt;/code&gt;：线程是进程的一个实体，是CPU调度和分派的基本单位，它是比进程更小的能独立运行的基本单位。线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源(如程序计数器，一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。一个线程可以创建和撤销另一个线程；同一个进程中的多个线程之间可以并发执行。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;微线程：又叫协程。tasklet运行在伪并发中，使用channel机制进行同步数据交换。python中的greenlet提供了微线程的操作。不同于多线程，它给我们提供了一种更加轻量的异步编程模式。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;协程&lt;code class=&quot;highlighter-rouge&quot;&gt;Coroutine&lt;/code&gt;：提供了不同于线程的另一种方式，它首先是串行化的。其次，在串行化的过程中，协程允许用户显式释放控制权，将控制权转移另一个过程。释放控制权之后，原过程的状态得以保留，直到控制权恢复的时候，可以继续执行下去。所以协程的控制权转移也称为“挂起”和“唤醒”。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;并发&lt;code class=&quot;highlighter-rouge&quot;&gt;concurrency&lt;/code&gt;：并发是指二个和多个事件在同一时间间隔内发生。并发是在逻辑层面上的同时工作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;并行&lt;code class=&quot;highlighter-rouge&quot;&gt;parallelism&lt;/code&gt;：并行是指二个或多个事件在同一时刻发生。并行是在物理层面上的同时工作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;同步&lt;code class=&quot;highlighter-rouge&quot;&gt;synchronous&lt;/code&gt;:在发出一个功能调用时，在没有得到结果之前，该调用就不返回。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;异步&lt;code class=&quot;highlighter-rouge&quot;&gt;asynchronous&lt;/code&gt;：异步的概念和同步相对。当一个异步过程调用发出后，调用者不能立刻得到结果。实际处理这个调用的部件在完成后，通过状态、通知和回调来通知调用者。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;阻塞：阻塞调用是指调用结果返回之前，当前线程会被挂起。函数只有在得到结果之后才会返回。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;非阻塞：非阻塞和阻塞的概念相对应，指在不能立刻得到结果之前，该函数不会阻塞当前线程，而会立刻返回。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;同步IO和异步IO的区别就在于：数据拷贝的时候进程是否阻塞。

阻塞IO和非阻塞IO的区别就在于：应用程序的调用是否立即返回。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 15 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/Common-Terms/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/Common-Terms/</guid>
        
        <category>基础</category>
        
        
      </item>
    
  </channel>
</rss>
