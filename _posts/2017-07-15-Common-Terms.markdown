---
layout: post
title: 常用术语
date: 2017-07-15
tag: 基础
---

- PV = page view

- TPS = transactions per second

- QPS = queries per second

- RPS = requests per second 

- RDS 关系型数据库服务 (Relational Database Service)

- 进程 `process`：进程是具有一定独立功能的程序关于某个数据集合上的一次运行活动，进程是系统进行资源分配和调度的一个独立单位。

- 线程 `thread`：线程是进程的一个实体，是 CPU 调度和分派的基本单位，它是比进程更小的能独立运行的基本单位。线程自己基本上不拥有系统资源，只拥有一点在运行中必不可少的资源 (如程序计数器，一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源。一个线程可以创建和撤销另一个线程；同一个进程中的多个线程之间可以并发执行。

- 微线程：又叫协程。tasklet 运行在伪并发中，使用 channel 机制进行同步数据交换。python 中的 greenlet 提供了微线程的操作。不同于多线程，它给我们提供了一种更加轻量的异步编程模式。

- 协程 `Coroutine`：提供了不同于线程的另一种方式，它首先是串行化的。其次，在串行化的过程中，协程允许用户显式释放控制权，将控制权转移另一个过程。释放控制权之后，原过程的状态得以保留，直到控制权恢复的时候，可以继续执行下去。所以协程的控制权转移也称为 “挂起” 和 “唤醒”。

- 并发 `concurrency`：并发是指二个和多个事件在同一时间间隔内发生。并发是在逻辑层面上的同时工作。

- 并行 `parallelism`：并行是指二个或多个事件在同一时刻发生。并行是在物理层面上的同时工作。

- 同步 `synchronous`: 在发出一个功能调用时，在没有得到结果之前，该调用就不返回。

- 异步 `asynchronous`：异步的概念和同步相对。当一个异步过程调用发出后，调用者不能立刻得到结果。实际处理这个调用的部件在完成后，通过状态、通知和回调来通知调用者。

- 阻塞：阻塞调用是指调用结果返回之前，当前线程会被挂起。函数只有在得到结果之后才会返回。

- 非阻塞：非阻塞和阻塞的概念相对应，指在不能立刻得到结果之前，该函数不会阻塞当前线程，而会立刻返回。

> 同步 IO 和异步 IO 的区别就在于：数据拷贝的时候进程是否阻塞
> 阻塞 IO 和非阻塞 IO 的区别就在于：应用程序的调用是否立即返回

---

### 软件版本

- Alpha：是内部测试版，一般只有测试人员使用。

- Beta：也是测试版，在 Alpha 版之后推出，一般可给用户内测使用。

- RC：(Release　Candidate) 候选版本。系统平台上就是发行候选版本。RC 版不会再加入新的功能了，主要着重于除错。

- GA：(General Availability) 正式发布的版本，在国外都是用 GA 来说明 release 版本的。

